
#### Part 5
Using the R on specifiction and estion of sample plan by simple random sampling, sistematic, stratification and to cluster. Propose: Present the statistic software R and sample select the estimation of differents sample plans, and how the simple random sampling, stratification sampling, cluster sampling and sistematic sampling. Preparation install R. Module1: Describe general concepts about statistic software R and package sampling on estimations by simples random sampling. Module2: Describe the package survey to estimation by the stratification sampling. Modulo3: Select samples by sistematic sampling and conglomerates with estimation to this plans on R. 
Modulo 1: Describe general concept about statistic software R and package sampling on estimation by simple random sampling.  Intro: when construct a search and drawing a complex sample, the data analysis on papel could be unavailable. Besides that, programming all the time th same formulas wastes so much time, when have to be apply in another part of process. Because of that, learn how to select sample and estimation for any sample plans by statistic software. In case we learn how to use R program inside the sample theory. In this module we know install R software and the principa characteristic which make it the best programming and the most versatile and widespread inside the academyc field and profissional fields. Using the library series inside the software to select simple random sample we do this estimation by sample plan. 
About software R: The R software is statistic and act as alternative by traditional statistic programming, as SPSS, SAS and Stata with open code language extensible. It means the software is open and can be used by users. And it's a extremely robust, simple to use, advanced and free. It's not exist demo version after this another version comletely are for pay, but it's all for free. E each person could just contribute with your own programming projects. That's really interesting because somebody on the other side could add somenthing inside the programming and you just using this code too. How interesting using R comed increase last years, and it's probabily you have to do something there or just implements by other person who available free using. Besides that, this environment is available on Windows, mac unix and linux. Do you know this software are always refresh and the userd could just download the last version. In the old days exists just classic R, original with a plataform more oldier, but nowadays you can use a interface more friendly and simple just to use it. In the real time, install class R and after that install a interface with better framworks. The operation of R is done in packages, named library. When you install R a lot of packages comes in the memory, and it's allow to use more than one interesting functions. It's done to R save space in memory and don't be to harvy. Other softwares, when you click to open all, everything is loading automatically, it's so harvy because the environment is hard to open with a lot slow time. The R works as a different, because you just install and download everything you gonna use. The number add just to figure indentify if it's the only space where you add something on programming. There you can click add the result appears. Figure 2 we have the inicial interface from RStudio. Note how we have more option than fig1. In this case, we have the 1 on local host where you do your programming, and the local will be use for backup. In case this program stops or the computer turn off, you'll lost everything if you were use R class, but RStudio is ok to save. That's a huge advantage. In 2 we can see easily how this data base and variables are using at this moment. Just click in some base and fast you see how much variables she had and what is the type of each variable.  Automatically , when created or read a file of data he'll add still add in that window. On 3 we got this window for execute commandas. That means this window is equal classic R. We can say the RStudio guarantee the R programming and more 3 window. All you need to execute will be done in this part of window. Finally we got the 4 on parts of exit with graphics results, help menu, intall and library charge and another things. Means, if you need some help to install one package you can go to 4 click on packages and intall how many packages you want. Just remember to install a package isn't sufficient to works, you need to loading. Al, the time you open and close the R it's mainting packages default (basics one). All them need to charged all the time. 
First access: when you open RStudio you can read a file of data, construct your base, install packages or just programming. You cans use a table, a simple graphic, one three dimensional, one scheme and infinit of options. Just using RStudio to do this analyses. To execute the programming sofatware, you can use a infinite options. We can uset the RStudio to do analyses. To execute the programming software you can just type it on window corresponde to the number of figure 2 after this type RUN in this window. Or you can just type directly the 3 and click enter. Let's see some examples for graphics of R could offer. Bacuse of that we can use a package instaal and loading R. That's a package graphics. Now, using the command you can type on software a italic to make different text and content. Let's start see demonstration of graphic package in 2 dimensions with the command demo. You can just copy and paste directly on programming or using: demo(graphics) After this type command below, press commanda enter repetition times. That's gonna show a lot of graphics of R could do it. /// This package are preview install and loading on R, so we don't need type your code. A lot of library need to been install and charged, as we seen in topics below. At this moment of install, depends of version R, could been showing the list of locals where you download packages. You can choose any local of list, but it's always indicate download in our city. As showing befora, inside R has a infinitive of packages where you can just using. To realixxe that sampling, we use the functions pre loading with R basically in two packages: Sampling and Survey. 
1. Sample Function: one of samples using is to select samples on R among sample(). This function is pre loading in memory R, so thats we don't need to install any package for this execute. To do this just using sample() who receive this vector as input and you say how many samples have to delete from this list. Let's say you are simulating plays and want to obtain from a common data 6 faces and desire obtain 10 results. As a result to play one time this common data is a number from 1 to 6, in this code is: sample(1:6, 10 replace=TRUE) It means, we are using th function sample() with three parameters.  It means we are using the function sample with three parameters. The first one refeers to the interval using the variance of 1 to 6, second one is the measure of sample which desires in this case of repetition and the replace said that retire is with or without replacement. At this way, we said the function sample is return 10 values, but all them inside had 1 to 6. So, we do this select by simple sample random method with replacement. You can use sample () to do the simple random sample withour replacement too. In this case, just substitue the TREU for FALSE on replace or just leave blank this part because the default of function is without replacement. Imagine you have done a buy from one store and receive one numbered coupon. the store wille one prixxe draw. probabily it'll do without replacement to the same person who won't gain two times. Knowing this the coupon prixxe using just insert sample() and obtain the result. The survey of this store analyse it available 9780 coupon. Just we can do it: sample(1:9780, 2, replace=FALSE) or just  sample(1:9780, 2) If rou rounded two way below, you have seen the result obtain different. How the value in return of function sample() is a number randomixxed, if you rounded this code a lot of times you'll obtain differents results each time. This behavior is correct for all cases, but, sometime you can desire obtain results repetition always when you execute this function. // Normally this happens just when you desire developer and test your code, or if you want the another person try reply yout results and obtain the same result. In this cases, it's commom specify the right value of input reference named seed.  if you offer a value for a seed, the sequence of random numbers will be definied for a knowing state. This happen because the R doesn't create numbers for truely randomic, but just numbers pseudorandom. A sequence pseudorandom is a set of numbers to, all pratichal effects appears random, because they are created by a algorithm. When you defined the input seed for a process pseudorandom, in R always return the same sequence pseudorandom. In R you use the function set.seed() to especific the input value for a seed. This argument for a set.seed() is for any integer value. let's use the equal seed, we can result the same result. 

set.seed(5)
sample(1:9780, 2, replace=FALSE)

## or just using:
set.seed(5)
sample(1:9780, 2)

the result of this programming had been offer the winners of both television from a coupon number 2255 and 6859, right? Remember what we are  seen using the RStudio, if you play R classic version, the result could be different. 

2. Sampling package: this package is another way to select samples, mainlywe used the sample plan more complex. It contains more functions and more internal option, but the most one goals is select sample using probabilistic sample. Obtain samples from R is easier, because the software treat this select just like a net subset form data. let's install this package and loading by:

install.packages("sampling")
library(sampling)

In this methos with replacement we need to used the function srswr(n,N). Just definied the sixxe of sample n and the populational sixx N. The function return with the vector with number times of unit decrease from this sample. First of all, we loading the package sample, after using these function. As example, we select a sample with sixxe 20 of population of sixxe 100. We always use the seed to ouor results aligned. We have:

set.seed(9)
s=srswr(20,100)
s

after run this commands, we have the result:

[1] 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 0 1 0 1 0 0 1 0
[43] 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0
[85] 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0

This result had done by the seed equal for all, said the unit of population from 1 to 100 been select. This value is equal to 1 had done as select elements by just one time, how is with the replacement, the equal values is 2, means that unit are select by two times. To see this unit, we can just do it:


(1:100)[s!=0]

The select units is: 

[1] 10 13 18 21 26 29 30 32 34 36 38 41 50 51 78 89 94

We see who is select two times, we can use the follow command:

(1:100)[s==2]

We've three units select more one time:


[1] 10 51 78

For this simple random sample without replacemente we will use srswor(n,N). It's a abreviation for sample random sampling without replacement. We will do the same at the anterior case:

set.seed(10)
s=srswor(20,100)
(1:100) [s!=0]

the result we are found:
[1] 7 8 9 13 15 24 27 34 39 42 54 55 71 72 74 76 83 88 91 99

Estimation for simple random sample: we are using software R for estiomation for data applyes a simple random sample. It's important to do a review of expressions using the average estimation, total and variance for SRS. The R had a series of based for internally data loading in your memory. Other bases are adding at moment to loading one package. Let's insert this command to see all available bases:

data()

Using this base for the package sampling named MU284. This database is a real base since 1992. This data abouy 284 cities from Sweden. A lot of informations are raised , but let's see the information P85. This variable from a quantity of population ( a thousand units) for each 284 cities. To run this base and other variables we do this:

data(MU284)
fix(MU284)

Observe the command fix open another window to seen the base. But remember to close the window opened before proceed. If you don't close, R command will run next commands. In this population are composed by N=284 cities, you can observe this and view the quantity of lines for each row with:

N= nrow(MU284)
N

Let's select SRS without replacement composed by 80 cities with the sample function. We'll use this seed to obtain the same results:

n = 80
set.seed(8)
selec = sample(1:N, n)
sample = MU284[selec,]
sample

Let's do this total estimation for average, variances for this SRS. We'll do the "hand" of programming for each estimation below:

3. Estimation of population variables: 
3.1 Estimation of populacional average:

sum(sample$P85)/n

By this sample with 80 cities, we fot the estimation of populacional average for all cieties for almost 28688 people (remember of data are thousands) 

3.2 Estimation of variance from estimation for populacional average

(1-n/N)*var(sample$085)/n

The estimation of variance from estimation is average 6.26 peoples**2

3.3 Standard error from estimation from average populacional:

sqrt((1-n/N)*var(sample$P85)/n)

After take the square root with the function sqrt, we got the standard error with estimation average 2503 people. So, the error of average estimation was almost 2503 people (remember always the unit of thousando is given ate final result)

3.4 Estimation of populacional total:

N*sum(sample$P85)/n

The estimation of variance from this total populacional estimation is 505685,8 people**2.

3.5 Standard error from estimation from a populational Total

sqrt(Nˆ2*(1/n-1/N)*var(sample$P85))

After do this square root, we got the standard error from a total about 7111159 people. So, this estimation error is the total of 711115 people( remember always the unit of thousand of the final result). You can ask if all the time you need estimate something you have do programming a code. That's a question. The answer is depends. If you need to use something too specific, could be that answer is yes. Or need to search something on the internet about some package in R. But we say it doesn't exist something in this programming you didn't find it. For our luck exists one package named survey, for all this estimations without we need to remember this formulas fro a average or variance for example. We need to specify the parameter for a sample plan and we need some estimations. For this example we did:

install.packages("survey")
library(survey)
samples$N = N
SRS = svydesign(id = ˜ 0, data = sample, fpc = ~N)
SRS

The parameter id serves to say if have some cluster in data, how we don't leave, we did with 0 or 1, after this input with the sample and fpc factor.This factor named the factor for correction for finit population. nothing more than the total of population, in this case SRS. For that, before doing the svydesign, we add the new column for the total population. So, to do this estimation using the package survey, we do:

3.5.1 Estimation of populacional average (svymean)
svymean(˜P85, SRS)

3.5.2 Estimation of populacional total (svytotal)

svytotal(˜P85, SRS)

Compare this result obtain by the survey with the results where we have done the programming. Look hoje we can obtain the same result. In this way, we don't need none of type for programming, just input the data base, we said the sample plan we like to adopt this package if load all the stuff.

examples1: On bingo of 5 international travel will be done for all buyers of determine store in shopping mall. After one year of this they will be add in some place, the last coupon distributed were 45965. Suposed all this papers in the place were be select by RSR without replacement, so select the winners coupons if you are using the function sample or the package sampling(using this seed with tha value 7 for both cases.) 
Sample ={26067 457230088151716312 }  
sampling = { 457263121517126067 30088}

first thing to do is be cafreful with the seed equal 7 in rstudio. to do this select by SRS without replacemente with the function sample() just in case:
set.seed(7)
sample(45965,5)

or just

set.seed(7)
sample(45965,5, rep=F)

The result found will be the sample in values 26067 4572 30088 15171 6312

With this using with sampling package we will use the function srswor (sample random sampling without replacement)  with this run commands:

library(sampling)
set.seed(7)
s=srswor(5,45965)
(1:45965) [s!=0]

With this sample 4571 6312 15171 26067 30088

example2:
The r software presents a series of data bases intern in your memori. Other bases are adding at the moment it'll charge some packages. Read this lecture base named belgianmunicipalities. She is contains a series of informations of diverses cities from Belgium. One of this variables is salary for on person, this base named averageincome. Which is the estimative from average from this variable from you standard error to this sample sixxe 200? (use seed with the value 2): This estimative is the average income populacional is almost 24888 euros and the standard error is almost 211 euros. To load this package sampling we do this lecture base on data base and be clear about the sixxe of this populations N and the sixxe of this sample. So:
library(sampling)
data(belgianmunicipalities)
fix(belgianmunicipalities)
N=nrow(belgianmunicipalities)
n=200

Done this we need to select the sample sixxe 200 with the seed with the value 2:

set.seed(2)
selec = sample(1:N,n)
sample = belgianmunicipalities[selec,]

With this sample select, we will use the package survey to do this data estimation:

library(survey)
sample$N = N
SRS = svydesign(id=~ 1, data = sample, fpc = ~ N)
SRS

After estimate thie average, and the standard error:

svymean( ~ averageincome, SRS)

The result found was 24888 to the average almost 211 to the Standard error. 

Module 2:

Describe the package survey to estimation from stratification sampling: On module before we saw the principal related with the sampling. We say the software constructed by packages, which one the person could created your own sand share with the users in comunity. Now, let's explore this about survey package to estimation data. So, we saw the stratification sampling with software R and how to do correctly some type of allocation with samples exists. Survey package: before we saw the using of survey package to do this estimation for all variables. The survey was created in 2004 by Thomas lumley in Auckland University in Newxxeland. It contains a series of function with interns parameters availables with the analyse data by sampling complex. To use this package step by step: The first step is select the sample to use how we can be done the package sample. Step two  In this part is necessary specify the sample plan used among by function svydesign() Step three: with the industrial drwan constructed, we can use the functions survey to do this estimation consider with this plan. All this special functions starts with svy, for example, the svymean() and svytotal()
In case of stratification sampling SS the first thing to do is verified if have some base refeer to this strata. Remenber how is in SS all strata have to be select samples. To do this select we gonna use again the package sample. The ideia is just use the fuction library sampling to select all samples and the library survey to do this estimation. For this function we gonna use the parameter:

svydesign(id= ~, strata=~, data=, weights=, fpc=, method=) 

Let'se see this parameter to the function svydesign to package survey: 
ID indicated the unit of sampling to groupin in a cluster. As a sampling for conglomerates not use here, we just have to put ~1 or ~0 with the hightlighter on position 
strata:  argument to say the variable using to do this stratification
data: parameter refeer to the named data base of sample
weights: indicate the weight sampling for this unit. In this case, it'll influencer by the factor of strata sampleh and by the population sixxe (wh= nh/Nh) If it won't want using the weight, it can use the weight of probability from selection too, because the weight and the probability of selection will be inverse quantities. 
Think about this example: If you select 4 companies in total of 1000 for analysis. What is the probability fro select one of this companies? Honestly we do P=4/1000= 0,004 For each one of this companies the chance is 0,4% to be select. Now, think about on this question: how many companies for each one of these four companies have to be represents?
step by step: step one to select four of 1000, this 4 companies select have to reply for it or another company were not been select. That's a idea for weight, be more representative for whom aren't select just for all them who will. Step2: just dot it w=1000/4=250 it means, the iformation for each company will be weight from 250 because she need represent other it won't be selecting. In this example, the sampling weight for one of theses unit is 250. If you repair, it's related among 0,004 from probability of selection and the value 250 of weight. Step three: it's a universe from another. If we multiple 250*0,004 the result will be equal for 1. So, we got the probability from selection, just 1 divide for itself and we found the weight. Obtain these two magnitude you automatically can weight another. 
For function svydesign, you need option for informe how the probability for than weight. In case, just be blank, and the software will understand it had been do a stratification selection with weighting equals among the strata. 
fpc - argument using to do this correct because of the population have to be finit (finite population correction). It's a vector added base one sample which one register will add the total of population. If we are doing the stratification sample, the fpc will be the total of populational for each one of theses stratas. The important part of these using is, knowing the total value of population, it's possible reduce the variance when the substantial fraction from total population be sampling by sampling of data. After this the object in sample plan, we can just using svymean and svytotal to do the estimation fro the average and the total of these respective weight for standard error. 
Data base MU284: To construct this in the stratification sample plan after this do this estimation from this sample, used again the base MU284. How this plan is more complex, because involves the stratification let's check details for this data. On base contain all of 11 differents bases describe to 284 cities on Sweden. So the variable is: ID the identifier for each city with tha values among 1 and 284. P85 population from 1985 (in thousand conversion) P75 Population from 1975 (in thousands) RMT85 Tax revenue for town in 1985 (in thousand from swedish crowns) CS82 Numbers of politicians conservatives in town council  SS82 Numbers of politicians social democrats from the town council  S82 Number of total politicians in town council ME84 Number from employees in town in 1984 REV84 Values from real estate according to the assessment from 1984 (in millions from swedish crowns) REG Indicator from geographic region CL Indicator from a cluster (one cluster consits in group for town neighbohood)
To do this stratification sampling based on in that base, we gonna used the variable REG, it's a indicator from geographic region with the variable from stratification

Sampling stratification with R:
We are selecting the simple stratification sample without replacement of sixxe 80 with proportional alocation on sixxe of stratas. Let's understand the parts for each one of this sample plan. First, we will investigate on population how many strata exists. Well done this, we will do a proportional way of this sixxe for each strata for a allocation in sample, so this stratas will receive more sample than others stratas, it will receive small sample. In this way, we indicated the quantity of units will be select on for each strata by the methos SRS without replacement. For all, we do the stratification been realixxed, we can created our object from sample plan and do our estimations. First of all, to do this  SS to verified the quantity for strata we got in this register, it means our population. Remember, it need to do the register will be review to search some mistakes and possibles inconsistencies, and besides that, be constantly refresh. First, read all our data and discovery how many regions we have on this base, it means how much strata we need to created. To do this using againa the base MU287 from this way:
library(sampling)
data(MU284)
table(MU284$REG)

The result found after run this code below is:
table(MU284$REG)
1 
25
2 
48
3 
32
4 
38
5 
56
6 
41
7 
15
8 
29

Based on this result obtain in table 3, we have 8 regions possibles to do this stratification. And, we have the total for each region, for example 25 town of region, 1,28 town on region 2 , and successively. To find this weighting factor on strata Wh, we do Wh = Nh/N it means the proportion for each region is in relation for the total. Besides the R, we got:

prop.table(table(MU284$REG))

SO WE HAVE THIS WEIGHT IN RELATED WITH THE STRATA OF Total

prop.table(table(MU284$REG))
1 
0.08802817
2 
0.16901408
3 
0.11267606
4 
0.13380282
5 
0.19718310
6 
0.14436620
7 
0.05281690
8 
0.10211268

If you added all this values, you can find the value 1, because the total have to result 100%. How we can used this proportional allocation, this distribution maintains the fraction of sampling for each strata h equals the fraction populacional. It means, in this type of allocation, the preview sample is defied of sixxe n and distributed proportional for sixxe of strata. This allocation is given by nh= n Nh/N in R, just:

80*prop.table(table(MU284$REG))
1 
7.042254
2
13.521127
3
9.014085
4
10.704225
5
15.774648
6
11.549296
7
4.225352
8
8.169014

Based on this information we can calculted the sixxe of sample for each strata. It's important to rounded every sixxe from sample for integer superior more closer. // Be careful: in that way, you can obtain the minimum required for strata. It could happen because the sample sixxe in the end will be bigger than the planning previewer. Based on this the sixxe of sample for each strata will be 8, 14, 10, 11, 16, 12, 5 and 9 and the sixxe pass from 80 to 85 units. // To select this stratification sample, we used the function strata, it'll be a part of sampling package, in that way: 

set.seed(3) 
selec = strata(MU284, stratanames = "REG", sixe = 
c(8,14,10,11,16,12,5,9), method = "srswor")
selec

With this using seed, we find the same unit for select one. Just rounded selec, you can see the print in screen on select sample. Let's use the command to se the first 10 units from a sample. You can substitue the 10 below for each value:

head(selec,10)

Te result found is:

head(selec, 10)
REG ID_unit             Prob Stratum
1             4  0.3200000   1
1             5  0.3200000   1
1             7  0.3200000   1
1             8  0.3200000   1
1             10 0.3200000   1
1             11 0.3200000   1
1             12 0.3200000   1
1             21 0.3200000   1
2             27 0.2916667   2
2             30 0.2916667   2

Note the table above we got 4 columns, and the region REG; the Id_unit which identify the select; variable Prob the probability from selection; the stratum, equal a REG created by the same fucntion. Let's try understand how to obtain the probability to select to two stratas. The first on we got 25 companies on strata and how we want select just 8, just fo P1= 8/25 = 0,32. To the strata 2 we got P2= 14/48 = 0,2916667 and successively for others.To filter just one vraiable from one file, we use the symbol $ separate the name base from the name of variable. We, obtain just the probability from select on this way:

selec$Prob

We have the select unit, we need to use the data base original to create the new object with all variables for this sample unit. So, we do this:

 sample = getdata(MU284, selec)
 head(sample, 8)

The functiogetdata can complete the sample data with all information for this population MU284. The base named sample will contain all information possible just to select units. With this sample well stablished, we can construct the sample plan after realixxe the estiomation from data. To create the vector fpc with the population total. For example, the 8 first register are strata 1 which got 25 unit for population, we have to repet all the 25 on 8 row, and successively for all strata. In our vector will be done with the command repetition rep below:

fpc=rep(c(25,48,32,38,56,41,15,29),c(8,14,10,11,16,12,5,9))
fpc


To specify the sample plan we use the command svydesign, to put the variable from stratification, the probability for select and the fpc. So, we got:

library(survey)
plan_est = svydesign(id = ~1, strata = ~Stratum, probs = ~selec¢Prob, 
data = sample, fpc = ~fpc)

With the sample plan specify, we can use the function svymean to do this estimation, like this:

## Estimation average and the standard error for the variable P85 consider the sample plan stratified:

svymean(~P85, plan_est)

with this result above our estimation from average populational is 20.068 people and the standard error is almost 1272 people( remember this data are in thousand measure)

## Estimation from total and the standard error from a variable P85 consider the stratification sample plan:

svytotal(~P85, plan_est)

For this estimation from populacional total, we obtain 5700000 people with the standard error about 361100 people. In this way we can obtain estimation for the average in populacional total from our variable P85. You can repet all this process to another variable from this bank and compare the results. 

## Another way to obtain the same results: We need to do the estimation from the quantity from interested using the sample plan create by the function svydesign. One of this parameter informed were the probability to select. We can obtain the same result have been indicate on function which the sample weight instead the probabilty from selection. As we see the probability ad the weight are inverse quantitie, we can use this software and indicate the vector from weight at these moment to create the sample drawn. To do this, we can added the column on this base for sample the values of weight to this way:

sample$WEIGHT = 1/sample$Prob

What we're doing is acess the sample base and add the column named weight with the values 1 divide for respective probabilities from select for each row. Now, we can do this specifications from sample plan again. Let's named plan_est2 and after this we can estimate again our average and variances:

plan_est2 = svydesign(id = ~1, strata = ~Stratum, weights = ~WEIGHT,
data = sample, fpc= ~fpc)

Repair in this code below with the parameter of probabilities from selection was substitue the parameter weight. We do this estimation for the second plan, we got:

svymean(~P85, plan_est2)
svytotal(~P85, plan_est2)

Comparing the results and notic we found the same values. So, we can indicated the function for how much possibilities in this selection how the sample weight. In case we indicated nothing, we can assume the strata are the same sixxe.

##Result without FPC:

Let's do this estimation ignores the factor from correction in finit population. This factor is important, because indicated the sixxe of population in each strata. So, this software doesn't neet assumes the population is infinit, and the estimation error decrease.  In this case, just eliminate the parameter and do this again with this estimation, let's name this drwan with plan_est3. So we have:

plan_est3= svydesign(id = ~1, strata = ~Stratum, probs = ~selec$Prob, 
data = sample)

we can using this weight instead the probability for selection:

plan_est3 = svydesign(id = ~1, strata = ~Stratum, weights = ~WEIGHT,
data = sample)

The estimation done by:

svymean(~P85, plan_est3)
svytotal(~P85, plan_est3)

This table above with comparision among the estimation on plan 1 or 2 with the facto fpc and the plan 3 without factor:

Estimation/ Sample plan                      Plan 1 or 2 (with FPC)        Plan 3 (without FPC)
average (thousand)                            20068                          20.068
standard error of average (thousand)            12715                       15237
total(thousand)                                  56994                     5699.4
standard error of total (thousand)            3611                         432.73

Observe the interested on result at table 1, because to compare the same sample plan with the same sample using the fpc, can be possible to decrease the estimation error. We always need to find the same estimation for less error possibles. To comparin the estimation from the average or the total, the result are the same from another, but the standard error are the measure from fpc which decrease. So, always if you have this information, you can use this specifications for the sample plan.

## Estimation for each strata: 
